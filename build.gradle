plugins {
//  id 'java'
//  id 'maven'
  id 'scala'
}

sourceCompatibility = 1.8

group = 'org.chrononaut.ephemera'
version = '1.0-SNAPSHOT'

ext {
  javaslangVersion = '2.0.5'
  scalaMajorVersion = '2.12'
  scalaMinorVersion = '1'
  scalaVersion = "${scalaMajorVersion}.${scalaMinorVersion}"
}

repositories {
    jcenter()
}

sourceSets.main.java.srcDirs = []
sourceSets.main.scala.srcDir "src/main/java"

dependencies {

  // ------------------------------------------------------------
  // Platform

  compile "org.scala-lang:scala-library:${scalaVersion}"
  compile "org.scala-lang:scala-reflect:${scalaVersion}"

  // ------------------------------------------------------------
  // Misc. libraries

  compile 'com.google.guava:guava:21.0'
  compile "io.javaslang:javaslang:${javaslangVersion}"
  compile "io.javaslang:javaslang-jackson:${javaslangVersion}"
  compile "org.typelevel:squants_${scalaMajorVersion}:1.2.0"
  compile "org.scalactic:scalactic_${scalaMajorVersion}:3.0.1"

  // ------------------------------------------------------------
  // Testing

  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.6.1'
  testCompile 'org.mockito:mockito-core:1.10.19'

  testCompile "org.scalatest:scalatest_${scalaMajorVersion}:3.0.1"
  testRuntime 'org.pegdown:pegdown:1.1.0' // TODO: is this necessary?

  // ------------------------------------------------------------
  // Logging

  compile group: 'com.typesafe.scala-logging', name: 'scala-logging-slf4j_2.11', version: '2.1.2'
//  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.2'
  compile 'com.fasterxml.jackson.core:jackson-core:2.4.1'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
  compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.12', version: '2.9.7'


}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionType = 'all' // Wrapper.DistributionType.ALL
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
  main = 'org.scalatest.tools.Runner'
  args = ['-R', 'build/classes/test', '-o']
  classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn scalaTest
